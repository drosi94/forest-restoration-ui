import tw from 'twin.macro'
import Head from 'next/head'
import { useTranslation } from 'next-i18next'
import { useAuthentication } from 'shared/providers/authentication'
import { Typography } from '@forest-restoration/shared'
import { CakeIcon } from '@heroicons/react/outline'
import { format } from 'date-fns'

const MaleIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 512 512">
    <path
      fill="currentColor"
      d="M292.563 65.656v40h85.156l-81.658 82.656-12.937 13.125c-9.054-6.765-18.936-12.412-29.406-16.75-16.478-6.825-34.23-10.343-52.064-10.343-17.835 0-35.553 3.52-52.03 10.344-16.48 6.824-31.514 16.858-44.126 29.468-12.613 12.612-22.643 27.647-29.47 44.125-6.825 16.48-10.373 34.228-10.374 52.064 0 17.836 3.52 35.553 10.344 52.03 6.825 16.48 16.888 31.514 29.5 44.126 12.612 12.612 27.647 22.643 44.125 29.47 16.478 6.824 34.195 10.374 52.03 10.374 17.837 0 35.586-3.55 52.064-10.375 16.477-6.827 31.512-16.857 44.124-29.47 12.61-12.612 22.644-27.647 29.47-44.125 6.823-16.478 10.343-34.196 10.342-52.03 0-17.836-3.518-35.587-10.344-52.064-4.183-10.098-9.583-19.646-16.03-28.436l13.218-13.406 81.844-82.875v85.875h40V65.656H292.562zm-90.907 148.688c12.533 0 25.17 2.516 36.75 7.312 11.58 4.797 22.263 11.95 31.125 20.813 8.863 8.86 16.017 19.545 20.814 31.124 4.796 11.58 7.312 24.217 7.312 36.75 0 12.533-2.517 25.14-7.312 36.72-4.796 11.577-11.92 22.292-20.78 31.155-8.864 8.862-19.578 16.014-31.158 20.81-11.58 4.798-24.216 7.313-36.75 7.314-12.533 0-25.14-2.516-36.72-7.313-11.578-4.795-22.292-11.95-31.155-20.81-8.86-8.864-16.015-19.578-20.81-31.158-4.798-11.58-7.314-24.185-7.314-36.718 0-12.534 2.516-25.17 7.313-36.75l.093-.22c4.796-11.494 11.91-22.13 20.718-30.937 8.808-8.805 19.444-15.892 30.94-20.687l.218-.094c11.58-4.795 24.185-7.313 36.718-7.312z"
    />
  </svg>
)

const FemaleIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 512 512">
    <path
      fill="currentColor"
      d="M256 25.438c-17.84 0-35.582 3.547-52.063 10.375-16.48 6.827-31.512 16.853-44.125 29.468-12.612 12.617-22.645 27.675-29.468 44.157C123.52 125.92 119.994 143.66 120 161.5c.005 17.832 3.547 35.558 10.375 52.03 6.828 16.474 16.858 31.488 29.47 44.095 12.61 12.607 27.65 22.646 44.124 29.47l.218.092c10.032 4.135 20.52 7.02 31.218 8.657l.125 18.906.314 49.188H165.97v40h70.124l.375 62.875.124 20 40-.25-.125-20-.376-62.625h69.937v-40h-70.186l-.313-49.438-.124-18.47c11.188-1.61 22.154-4.6 32.625-8.936 16.476-6.823 31.515-16.862 44.126-29.47 12.61-12.606 22.64-27.62 29.47-44.093 6.827-16.472 10.37-34.198 10.374-52.03.005-17.84-3.52-35.58-10.344-52.063-6.823-16.482-16.856-31.54-29.47-44.156-12.61-12.614-27.643-22.64-44.123-29.468-16.48-6.827-34.224-10.374-52.063-10.374zm0 40c12.536 0 25.17 2.514 36.75 7.312 11.58 4.798 22.294 11.947 31.156 20.813 8.863 8.865 15.987 19.573 20.78 31.156 4.796 11.58 7.318 24.213 7.314 36.75-.004 12.53-2.515 25.173-7.313 36.75-4.797 11.575-11.95 22.264-20.812 31.124-8.862 8.86-19.58 16.018-31.156 20.812-11.58 4.795-24.19 7.28-36.72 7.28-12.53.002-25.14-2.485-36.72-7.28-11.576-4.794-22.293-11.953-31.155-20.812-8.862-8.86-16.015-19.55-20.813-31.125-4.797-11.577-7.308-24.22-7.312-36.75-.004-12.537 2.518-25.17 7.313-36.75 4.794-11.584 11.918-22.292 20.78-31.157 8.863-8.866 19.576-16.015 31.157-20.813 11.58-4.798 24.214-7.313 36.75-7.313z"
    />
  </svg>
)

export const MyProfile = ({ user }) => {
  const { t } = useTranslation(['profile'])

  const { username, photoURL, displayName, birthDate, gender } = user

  const splitDisplayName = displayName.split(' ')

  if (!user) {
    return null
  }

  return (
    <div tw="flex flex-col gap-6 items-center justify-center">
      <div tw="avatar placeholder">
        <div tw="!flex items-center justify-center bg-base-100 text-base-100 rounded-full w-24 h-24">
          {photoURL ? (
            <img alt="avatar" src={photoURL} />
          ) : (
            <Typography tw="uppercase text-4xl">
              {splitDisplayName?.[0][0] + (splitDisplayName?.[1]?.[0] ?? splitDisplayName?.[0][1])}
            </Typography>
          )}
        </div>
      </div>

      <div tw="flex flex-col">
        <div tw="flex gap-1">
          <Typography tw="text-center" fontSize="xxlarge" fontWeight="bold">
            {displayName}
          </Typography>
          {gender === 'M' && <MaleIcon />}
          {gender === 'F' && <FemaleIcon />}
        </div>

        <Typography fontSize="large">@{username}</Typography>
      </div>

      {birthDate && (
        <div tw="flex gap-2">
          <CakeIcon width={24} height={24} />
          {format(new Date(birthDate), 'dd/MM/yyyy')}
        </div>
      )}
    </div>
  )
}
